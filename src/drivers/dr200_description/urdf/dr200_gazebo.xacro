<?xml version="1.0"?>
<robot name="dr200" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Parameters -->
  <xacro:arg name="publish_odom_tf" default="false"/>
  <xacro:arg name="use_camera" default="false"/>

  <!-- DR200 description -->
  <xacro:include filename="$(find dr200_description)/urdf/dr200_description.xacro" />

  <!-- Base inertia link -->
  <link name="base_inertia">
    <collision>
      <geometry>
        <cylinder radius="${base_radius}" length="${base_height}"/>
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="15" r="${base_radius}" h="${base_height}"/>
  </link>
  <joint name="base_inertia_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_inertia"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <!-- IMU -->
  <gazebo reference="imu_base">
      <material>Gazebo/Bule</material>
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
          <always_on>true</always_on>
          <update_rate>100</update_rate>
          <visualize>true</visualize>
          <topic>__default_topic__</topic>
          <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
              <topicName>imu/data</topicName>
              <bodyName>imu_base</bodyName>
              <updateRateHZ>100.0</updateRateHZ>
              <gaussianNoise>0.00</gaussianNoise>
              <xyzOffset>0 0 0</xyzOffset>
              <rpyOffset>0 0 0</rpyOffset>
              <frameName>imu_base</frameName>
          </plugin>
          <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>
  
  <!-- Laser Scanner -->
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>270</samples>
            <resolution>1</resolution>
            <min_angle>-2.356</min_angle>
            <max_angle>2.356</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.12</min>
          <max>20</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Wheel Gazebo material -->
  <gazebo reference="left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <!-- Caster wheel Gazebo material -->
  <gazebo reference="front_caster">
    <material>Gazebo/Grey</material>
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <gazebo reference="rear_caster">
    <material>Gazebo/Grey</material>
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <!-- Diff Drive -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <updateRate>30.0</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>${wheeltrack}</wheelSeparation>
      <wheelDiameter>${wheel_radius*2}</wheelDiameter>
      <wheelAcceleration>1.0</wheelAcceleration>
      <wheelTorque>20</wheelTorque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <odometrySource>1</odometrySource>
      <publishWheelTF>false</publishWheelTF>
      <publishOdom>true</publishOdom>
      <publishOdomTF>$(arg publish_odom_tf)</publishOdomTF>
      <publishWheelJointState>false</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>

  <!-- Depth Camera if use_camera is true -->
  <xacro:if value="$(arg use_camera)">
    <gazebo reference="camera_link">  
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*pi/180.0}</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>color/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>color/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>camera_link</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:if>

</robot>
